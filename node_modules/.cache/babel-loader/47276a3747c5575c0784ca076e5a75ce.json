{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  name: \"button\"\n}, \"Simpan\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"List Users\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hallo\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Users\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  const _component_from = _resolveComponent(\"from\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.save && _ctx.save(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.name = $event),\n    name: \"\",\n    value: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.form.name]]), _hoisted_2, _hoisted_3, _hoisted_4], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: user.id\n    }, [_createElementVNode(\"li\", null, _toDisplayString(user.name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_6, _createElementVNode(\"div\", null, [_hoisted_7, _createVNode(_component_from, {\n    onSubmit: _withModifiers(_ctx.postItem, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.form.id = $event),\n      placeholder: \"Id_Input \"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.form.id]]), _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.form.name = $event),\n      placeholder: \"Name \"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.form.name]]), _hoisted_10]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onSubmit\"])]), _createCommentVNode(\" <h2>List Users</h2>\\r\\n        Table \"), _createCommentVNode(\" <thead>\\r\\n            <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n            </tr>\\r\\n        </thead> \"), _createCommentVNode(\" <ul v-for=\\\"user in users\\\" :key=\\\"user.id\\\">\\r\\n            <li>{{ user.name }}\\r\\n                <button type=\\\"button\\\" v-on:click=\\\"edit(user)\\\" name=\\\"button\\\">Edit</button> ||\\r\\n                <button typef=\\\"button\\\" name=\\\"button\\\">Hapus</button>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <table>\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr v-for=\\\"user in users\\\" :key=\\\"user.id\\\">\\r\\n                    <td>{{ user.id }}</td>\\r\\n                    <td>{{ user.name }}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table> \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;;;gCAGsDC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCACzDA,oBAAmD,QAAnD,EAAmD;EAA3CC,IAAI,EAAC,QAAsC;EAA7BC,IAAI,EAAC;AAAwB,CAAnD,EAAoC,QAApC,EAA0C;AAAA;AAA1C;;gCAGJF,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCAUJA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;gCAEIA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;;;gCAEoEA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;iCAEhEA,oBAAkC,QAAlC,EAAkC;EAA1BC,IAAI,EAAC;AAAqB,CAAlC,EAAsB,KAAtB,EAAyB;AAAA;AAAzB;;;;;6DAvBRD,oBAcM,KAdN,cAcM,CAZFA,oBAGO,MAHP,EAGO;IAHAG,QAAM,wDAAUC,+BAAV,EAAc,WAAd;EAGN,CAHP,mBACIJ,oBAAwD,OAAxD,EAAwD;IAAjDC,IAAI,EAAC,MAA4C;+DAA5BG,UAAKF,OAAIG,OAAmB;IAAjBH,IAAI,EAAC,EAAY;IAATI,KAAK,EAAC;EAAG,CAAxD;;EAAA,kBAA4BF,UAAKF,qBAAwBK,YACzDC,WAFJ;;EAAA,CAYE,EAPFC,UAOE,qBALFC,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFcR,UAEd,EAFMS,IAAa,IAAT;yBAAfH,oBAEK,IAFL,EAEK;MAFsBI,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFL,GACIf,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBgB,iBAAjBH,IAAI,CAACX,IAAY,CAAxB,EAAgB;IAAA;IAAhB,EADJ;GAEK,CAFL;;EAAA,CAKE,EAdN,GAiBAe,YACAjB,oBAOM,KAPN,EAOM,IAPN,EAOM,CANFkB,UAME,EALFC,aAIOC,eAJP,EAIO;IAJAjB,QAAM,iBAAUC,aAAV,EAAkB,WAAlB;EAIN,CAJP;sBACI,MAA+D,iBAA/DJ,oBAA+D,OAA/D,EAA+D;MAAxDC,IAAI,EAAC,QAAmD;iEAAjCG,UAAKW,KAAEV,OAA0B;MAAxBgB,WAAW,EAAC;IAAY,CAA/D;;IAAA,kBAA8BjB,UAAKW,KAA4B,cAACO,UAAD,kBAC/DtB,oBAA6D,OAA7D,EAA6D;MAAtDC,IAAI,EAAC,MAAiD;iEAAjCG,UAAKF,OAAIG,OAAwB;MAAtBgB,WAAW,EAAC;IAAU,CAA7D;;IAAA,kBAA4BjB,UAAKF,OAD8B,EAE/DqB,WAF+D;;;;GADnE;;EAAA,eAKE,CAPN,GAQIC,+DAGAA,+JAMAA","names":["class","_createElementVNode","type","name","onSubmit","_ctx","$event","value","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","user","key","id","_toDisplayString","_hoisted_6","_hoisted_7","_createVNode","_component_from","placeholder","_hoisted_9","_hoisted_10","_createCommentVNode"],"sourceRoot":"","sources":["D:\\Semester 3\\Proyek 3\\CobaVue\\CrudVue\\crud\\src\\Views\\MyMain.vue"],"sourcesContent":["<template lang=\"html\">\r\n    <div class=\"\">\r\n\r\n        <form @submit.prevent=\"save\">\r\n            <input type=\"text\" v-model=\"form.name\" name=\"\" value=\"\"> <br>\r\n            <button type=\"submit\" name=\"button\">Simpan</button>\r\n        </form>\r\n        \r\n        <h4>List Users</h4>\r\n\r\n        <ul v-for=\"user in users\" :key=\"user.id\">\r\n            <li>{{ user.name }}</li>\r\n        </ul>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <h1>Hallo</h1>\r\n    <div>\r\n        <h2>Add Users</h2>\r\n        <from @submit.prevent=\"postItem\">\r\n            <input type=\"hidden\" v-model=\"form.id\" placeholder=\"Id_Input \"> <br>\r\n            <input type=\"text\" v-model=\"form.name\" placeholder=\"Name \" />\r\n            <button type=\"submit\">Add</button>\r\n        </from>\r\n    </div>\r\n        <!-- <h2>List Users</h2>\r\n        Table -->\r\n\r\n        <!-- <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n            </tr>\r\n        </thead> -->\r\n        <!-- <ul v-for=\"user in users\" :key=\"user.id\">\r\n            <li>{{ user.name }}\r\n                <button type=\"button\" v-on:click=\"edit(user)\" name=\"button\">Edit</button> ||\r\n                <button typef=\"button\" name=\"button\">Hapus</button>\r\n            </li>\r\n        </ul>\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.id\">\r\n                    <td>{{ user.id }}</td>\r\n                    <td>{{ user.name }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table> -->\r\n    \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n    export default {\r\n        // name: 'MyMain',\r\n        // // data() {\r\n        // //     return {\r\n        // //         form:{\r\n        // //             id:\"\",\r\n        // //             name:\"\",\r\n        // //         },\r\n        // //         users:[],\r\n        // //     },\r\n        // // },\r\n        \r\n        data() {\r\n            return {\r\n                form: {\r\n                    name: ''\r\n                },\r\n                users: []\r\n            },\r\n        },\r\n\r\n        methods:{\r\n            load() {\r\n                axios.get(\"http://localhost:3000/users\")\r\n                .then((response) => {\r\n                    this.users = response.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error Get Data \", error);\r\n                })\r\n            },\r\n            save() {\r\n                axios.get(\"http://localhost:3000/users\")\r\n                .then(() => {\r\n                    this.load();\r\n                    this.form.name = '';\r\n                    console.log('saving....');\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error Get Data \", error);\r\n                })\r\n            },\r\n            edit() {\r\n                this.form.name = \"\";\r\n            },\r\n        //     getItem(){\r\n        //         axios.get(\"http://localhost:3000/users\")\r\n        //         .then((response) => {\r\n        //             this.users = response.data;\r\n        //             console.log(\"data\", response.data);\r\n        //         })\r\n        //         .catch((error) => {\r\n        //             console.log(\"Error Get Data \", error);\r\n        //         })\r\n        //     },\r\n        //     postItem(){\r\n        //         axios\r\n        //         .post(\"http://localhost:3000/users\", this.form)\r\n        //         .then(() => {\r\n        //             this.getItem();\r\n        //             this.form.id= \"\";\r\n        //             this.form.name= \"\";\r\n        //             alert(\"Data berhasil dipost\");\r\n        //         })\r\n        //         .catch((error) => {\r\n        //             console.log(\"Error Get Data \", error);\r\n        //         })\r\n        //     },\r\n        // },\r\n        \r\n        // mounted() {\r\n        //     this.getItem();\r\n        // }\r\n\r\n        mounted() {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n\r\n</script>\r\n\r\n// <style>\r\n//     .tabelnya {\r\n//         width: 100%;\r\n//         align-items: ClientRequest;\r\n//     }\r\n// </style>"]},"metadata":{},"sourceType":"module"}