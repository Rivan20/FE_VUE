{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withModifiers as _withModifiers, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hallo\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Users\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"List Users\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\")])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache) {\n  const _component_from = _resolveComponent(\"from\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_from, {\n    onSubmit: _withModifiers(_ctx.postItem, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.id = $event),\n      placeholder: \"Id_Input \"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.form.id]]), _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.form.name = $event),\n      placeholder: \"Name \"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.form.name]]), _hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onSubmit\"]), _hoisted_4, _createCommentVNode(\" Table \"), _createElementVNode(\"table\", null, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(user.name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;gCAEIA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;gCAIIA,oBAAkC,QAAlC,EAAkC;EAA1BC,IAAI,EAAC;AAAqB,CAAlC,EAAsB,KAAtB,EAAyB;AAAA;AAAzB;;gCAGJD,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCAGIA,oBAKQ,OALR,EAKQ,IALR,EAKQ,cAJRA,oBAGK,IAHL,EAGK,IAHL,EAGK,cAFDA,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAEC,eADDA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CACC,CAHL,CAIQ,CALR;;AAAA;;;;;6DAZRE,YACAF,oBAwBM,KAxBN,EAwBM,IAxBN,EAwBM,CAvBFG,UAuBE,EAtBFC,aAIOC,eAJP,EAIO;IAJAC,QAAM,iBAAUC,aAAV,EAAkB,WAAlB;EAIN,CAJP;sBACI,MAAiE,iBAAjEP,oBAAiE,OAAjE,EAAiE;MAA1DC,IAAI,EAAC,QAAqD;iEAAnCM,UAAKC,KAAEC,OAA4B;MAA1BC,WAAW,EAAC;IAAc,CAAjE;;IAAA,kBAA8BH,UAAKC,KAA8B,kBACjER,oBAA6D,OAA7D,EAA6D;MAAtDC,IAAI,EAAC,MAAiD;iEAAjCM,UAAKI,OAAIF,OAAwB;MAAtBC,WAAW,EAAC;IAAU,CAA7D;;IAAA,kBAA4BH,UAAKI,OADgC,EAEjEC,UAFiE;;;;GADrE;;EAAA,eAsBE,EAhBFC,UAgBE,EAfFC,8BAeE,EAdFd,oBAaQ,OAbR,EAaQ,IAbR,EAaQ,CAZJe,UAYI,EANJf,oBAKQ,OALR,EAKQ,IALR,EAKQ,oBAJJgB,oBAGKC,SAHL,EAGK,IAHL,EAGKC,YAHcX,UAGd,EAHMY,IAAa,IAAT;yBAAfH,oBAGK,IAHL,EAGK;MAHsBI,GAAG,EAAED,IAAI,CAACX;IAGhC,CAHL,GACIR,oBAAsB,IAAtB,EAAsB,IAAtB,EAAsBqB,iBAAfF,IAAI,CAACX,EAAU,CAAtB,EAAc;IAAA;IAAd,GACAR,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBqB,iBAAjBF,IAAI,CAACR,IAAY,CAAxB,EAAgB;IAAA;IAAhB,EAFJ;GAGK,CAHL;;EAAA,CAII,EALR,CAMI,CAbR,CAcE,CAxBN","names":["_createElementVNode","type","_hoisted_1","_hoisted_2","_createVNode","_component_from","onSubmit","_ctx","id","$event","placeholder","name","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_createElementBlock","_Fragment","_renderList","user","key","_toDisplayString"],"sourceRoot":"","sources":["D:\\Semester 3\\Proyek 3\\CobaVue\\CrudVue\\crud\\src\\Views\\MyMain.vue"],"sourcesContent":["<template>\r\n    <h1>Hallo</h1>\r\n    <div>\r\n        <h2>Add Users</h2>\r\n        <from @submit.prevent=\"postItem\">\r\n            <input type=\"hidden\" v-model=\"form.id\" placeholder=\"Id_Input \" />\r\n            <input type=\"text\" v-model=\"form.name\" placeholder=\"Name \" />\r\n            <button type=\"submit\">Add</button>\r\n        </from>\r\n\r\n        <h2>List Users</h2>\r\n        <!-- Table -->\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.id\">\r\n                    <td>{{ user.id }}</td>\r\n                    <td>{{ user.name }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n    export default {\r\n        name: 'MyMain',\r\n        data() {\r\n            return {\r\n                form:{\r\n                    id:\"\",\r\n                    name:\"\",\r\n                },\r\n                users:[],\r\n            }\r\n        },\r\n        \r\n        methods:{\r\n            getItem(){\r\n                axios.get(\"http://localhost:3000/users\")\r\n                .then((response) => {\r\n                    this.users = response.data;\r\n                    console.log(\"data\", response.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error Get Data \", error);\r\n                })\r\n            }\r\n            postItem(){\r\n                axios\r\n                .post(\"http://localhost:3000/users\", this.form)\r\n                .then(() => {\r\n                    this.getItem();\r\n                    this.form.id= \"\";\r\n                    this.form.name= \"\";\r\n                    alert(\"Data berhasil dipost\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error Get Data \", error);\r\n                })\r\n            }\r\n        },\r\n        \r\n        mounted() {\r\n            this.getItem();\r\n        }\r\n    }\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}